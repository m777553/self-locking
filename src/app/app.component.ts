import { Component } from '@angular/core';
import { CONTENT } from "./content.const";
import { IContent } from "./app.interface";

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.scss']
})
export class AppComponent {
  title = 'self-locking';
  content = CONTENT;
  todaySelfLocking: IContent = {
    image: 'üôÖ‚Äç‚ôÇÔ∏è',
    title: ''
  };
  isTextVisible = false; // –î–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Ç–µ–∫—Å—Ç–∞

  choseSelfLocking() {
    const iterations = 10; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–º–µ–Ω —Ç–µ–∫—Å—Ç–æ–≤
    const interval = 100; // –ò–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É —Å–º–µ–Ω–∞–º–∏ (–≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö)

    let count = 0;
    const intervalId = setInterval(() => {
      const randomIndex = Math.floor(Math.random() * this.content.length);
      this.todaySelfLocking = { ...this.content[randomIndex] };
      count++;

      if (count === iterations) {
        clearInterval(intervalId);
        this.isTextVisible = true; // –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ç–µ–∫—Å—Ç
      }
    }, interval);
  }

  copyToClipboard() {
    navigator.clipboard.writeText(this.todaySelfLocking.title).then(() => {
      alert('–í–∞—à —Å–∞–º–æ–∑–∞–ø—Ä–µ—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
    }).catch(err => {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ç–µ–∫—Å—Ç–∞: ', err);
    });
  }
}
