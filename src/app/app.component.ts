import {Component} from '@angular/core';
import {CONTENT, MESSAGE} from "./content.const";
import {IContent} from "./app.interface";
import {CustomAlertComponent} from "./components/custom-alert/custom-alert.component";
import {BehaviorSubject} from "rxjs";

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.scss']
})
export class AppComponent {
  title = 'self-locking';
  content = CONTENT;
  todaySelfLocking: IContent = {
    image: 'üôÖ‚Äç‚ôÇÔ∏è',
    title: ''
  };
  isTextVisible = false; // –î–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Ç–µ–∫—Å—Ç–∞
  isCaptchaSelectionShown = false;
  isCongratulationShown$ = new BehaviorSubject<boolean>(false);
  message: string = ''

  constructor() {
    console.error('–ù–∞—à–∏ –Ω–µ—É–¥–µ—Ä–∂–∏–º—ã–µ –±–ª—é—Å—Ç–∏—Ç–µ–ª–∏ —á–∏—Å—Ç–æ—Ç—ã –∫–æ–¥–∞ –∏ –æ—Ç–ª–∞–¥–∫–∏! –ú—ã –∏ –∑–¥–µ—Å—å —Ä–∞–¥—ã –≤–∞—Å –≤–∏–¥–µ—Ç—å –∏ —Ö–æ—Ç–∏–º –ø–æ–∑–¥—Ä–∞–≤–∏—Ç—å —Å 23 —Ñ–µ–≤—Ä–∞–ª—è!')
  }

  choseSelfLocking() {
    const iterations = 10; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–º–µ–Ω —Ç–µ–∫—Å—Ç–æ–≤
    const interval = 100; // –ò–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É —Å–º–µ–Ω–∞–º–∏ (–≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö)

    let count = 0;
    const intervalId = setInterval(() => {
      const randomIndex = Math.floor(Math.random() * this.content.length);
      this.todaySelfLocking = {...this.content[randomIndex]};
      count++;

      if (count === iterations) {
        clearInterval(intervalId);
        this.isTextVisible = true; // –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ç–µ–∫—Å—Ç
      }
    }, interval);
  }

  copyToClipboard(alert: CustomAlertComponent) {
    // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç textarea
    const textArea = document.createElement('textarea');
    textArea.value = this.todaySelfLocking.title; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
    document.body.appendChild(textArea); // –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –≤ DOM
    textArea.select(); // –í—ã–±–∏—Ä–∞–µ–º —Ç–µ–∫—Å—Ç
    textArea.setSelectionRange(0, 99999); // –î–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤

    // –ü—ã—Ç–∞–µ–º—Å—è —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç
    try {
      const successful = document.execCommand('copy'); // –ö–æ–ø–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
      if (successful) {
        alert.showAlert('–í–∞—à —Å–∞–º–æ–∑–∞–ø—Ä–µ—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
      } else {
        alert.showAlert('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç.');
      }
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ç–µ–∫—Å—Ç–∞: ', err);
      alert.showAlert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ç–µ–∫—Å—Ç–∞!');
    }

    // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
    document.body.removeChild(textArea);
  }

  showCaptchaSelection() {
    this.isCaptchaSelectionShown = true;
  }

  selectCongratulation(selectedCongratulation: boolean | null) {
    this.isCaptchaSelectionShown = false;
    if (selectedCongratulation === null) {
      this.message = MESSAGE.lk;
    }
    if (selectedCongratulation) {
      this.message = MESSAGE.all
    }
    if (selectedCongratulation === false) {
      this.message = MESSAGE.error
    }
    this.isCongratulationShown$.next(true)
  }
}
